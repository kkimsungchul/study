# Effective Java - 챕터11. equals를 재정의 하려거든 HashCode도 재정의 하라
	equals를 재정의한 클래스 모두에서 hashCode 도 재정의해야 한다.
	그렇지 않으면 hashCode 일반 규약을 어기게 되어 해당 클래스의 인스턴스를 HashMap 이나 HashSet 같은 컬렉션의 원소로 사용할 떄 문제를 일으킬 것이다.

	아래의 내용은 Object 명세에 있는 규약이다.
	=================================================================================================================
	- equals 비교에 사용되는 정보가 변경되지 않았다면, 애플리케이션이 실행되는 동안 그 객체의 hashCode메소드는 몇 번을 호출해도 일관되게 항상 같은 값을 반환해야 한다.
	단 애플리케이션을 다시 실행한다면 이 값이 달라져도 상관 없다.

	- equals(Object)가 두 객체를 같다고 판단했다면, 두 객체의 hashCode는 똑같은 값을 반환해야 한다.

	- equals(Object)가 두 객체를 다르다고 판단했더라도, 두 객체의 hashCode가 서로 다른 값을 반환할 필요는 없다. 
	단, 다른 객체에 대해서는 다른 값을 반환해야 해시테이블의 성능이 좋아진다.
	=================================================================================================================

	
	HashCode 재정의를 잘못했을 때 크게 문제가 되는 조항은 두번째 조항이다.
	논리적으로 같은 객체는 같은 해시코드를 반환해야 한다.
	equals는 물리적으로 다른 두 객체를 논리적으로는 같다고 할 수 있다.
	하지만 Object의 기본 hashCode 메소드는 이 둘이 전혀 다르다고 판단하여, 규약과 달리 서로 다른 값을 반환한다.

	
	
