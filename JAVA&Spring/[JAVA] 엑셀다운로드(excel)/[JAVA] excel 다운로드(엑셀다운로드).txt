[ JAVA - 엑셀 다운로드 OR 엑셀 파일 생성 ]


# Excel 파일 생성 코드
	=================================================================================================================
	import java.io.FileOutputStream;
	import java.io.IOException;
	import java.util.HashMap;
	import org.apache.poi.ss.usermodel.Cell;
	import org.apache.poi.ss.usermodel.Row;
	import org.apache.poi.ss.usermodel.Sheet;
	import org.apache.poi.ss.usermodel.Workbook;
	import org.apache.poi.xssf.usermodel.XSSFWorkbook;

	public class HashMapToExcel {

	  public static void main(String[] args) throws IOException {
		HashMap<String, String> data = new HashMap<String, String>();
		data.put("Key1", "Value1");
		data.put("Key2", "Value2");
		data.put("Key3", "Value3");
		
		String excelFilePath = "data.xlsx";
		Workbook workbook = new XSSFWorkbook();
		Sheet sheet = workbook.createSheet("Data");

		int rowNum = 0;
		for (String key : data.keySet()) {
		  Row row = sheet.createRow(rowNum++);
		  Cell keyCell = row.createCell(0);
		  keyCell.setCellValue(key);
		  Cell valueCell = row.createCell(1);
		  valueCell.setCellValue(data.get(key));
		}

		FileOutputStream outputStream = new FileOutputStream(excelFilePath);
		workbook.write(outputStream);
		workbook.close();
	  }

	}
	=================================================================================================================



# 오류 발생 - 1
	=================================================================================================================
	"C:\Program Files\Java\jdk1.8.0_192\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\lib\idea_rt.jar=3081:C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_192\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_192\jre\lib\rt.jar;C:\IntellijProject\CodeTest\out\production\CodeTest;C:\IntellijProject\CodeTest\lib\jackson-annotations-2.9.8.jar;C:\IntellijProject\CodeTest\lib\jackson-core-2.9.8.jar;C:\IntellijProject\CodeTest\lib\jackson-databind-2.9.8.jar;C:\IntellijProject\CodeTest\lib\poi-5.2.3.jar;C:\IntellijProject\CodeTest\lib\poi-ooxml-5.2.3.jar;C:\IntellijProject\CodeTest\lib\commons-collections4-4.4.jar;C:\IntellijProject\CodeTest\lib\xmlbeans-5.1.1.jar;C:\IntellijProject\CodeTest\lib\commons-lang3-3.12.0.jar;C:\IntellijProject\CodeTest\lib\commons-io-2.11.0.jar;C:\IntellijProject\CodeTest\lib\log4j-core-2.20.0.jar;C:\IntellijProject\CodeTest\lib\log4j-api-2.20.0.jar;C:\IntellijProject\CodeTest\lib\commons-compress-1.22.jar;C:\IntellijProject\CodeTest\lib\ooxml-schemas-1.4.jar;C:\IntellijProject\CodeTest\lib\json-simple-1.1.1.jar;C:\IntellijProject\CodeTest\lib\jsoup-1.13.1.jar" com.sungchul.ExcelMain
	Exception in thread "main" java.lang.NoSuchFieldError: Factory
		at org.apache.poi.xssf.usermodel.XSSFWorkbook.onWorkbookCreate(XSSFWorkbook.java:476)
		at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:233)
		at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:227)
		at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:215)
		at com.sungchul.ExcelMain.main(ExcelMain.java:23)
	=================================================================================================================

	poi-ooxml-schemas-4.1.2.jar 라이브러리가 없어서 발생한줄 알았음 그래서 추가함
	https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas/4.1.2


	그래도 오류 발생함
	해결방안으로는 poi-ooxml-schemas-4.1.2.jar 라이브러리 제거 후 poi-ooxml-lite-5.2.3.jar 라이브러리 추가


	오류 처리 방안 : https://stackoverflow.com/questions/70606327/exception-in-thread-main-java-lang-nosuchfielderror-factory

	안됨 그래도 안됨
	라이브러리 버전들이 맞지 않아서 오류가 발생한다고 함

	아래의 라이브러리 버전들로 다 맞추니 작동함
		commons-collections4-4.4.jar
		commons-compress-1.22.jar
		log4j-api-2.20.0.jar
		log4j-core-2.20.0.jar
		poi-4.1.2.jar
		poi-ooxml-4.1.2.jar
		poi-ooxml-schemas-4.1.2.jar
		xmlbeans-3.1.0.jar

	※ 종속 및 연관된 라이브러리들이 많다보니 하나만 버전이 달라도 안됨
	



#################################################################################################################

# 사용한 라이브러리

apache\poi\poi-scratchpad\3.10-FINAL\poi-scratchpad-3.10-FINAL.jar

apache\poi\poi\3.10-FINAL\poi-3.10-FINAL.jar

apache\poi\poi-contrib\3.7-beta3\poi-contrib-3.7-beta3.jar


1. 화면단에 엑셀 다운로드 버튼 생성



2. 버튼클릭시 호출되는 function 생성 (ajax)



3. ajax 호출시 엑셀다운로드를 위해 생성한 컨트롤러 호출

	

	3-1. 컨트롤러에 넘기는값은 리스트를 조회할때 넘기는 값과 똑같아야 함





4. 해당 컨트롤러에서 화면에 뿌려주는거와 똑같이 서비스에서 리스트를 호출 



5. 호출된 리스트가 VO타입이라면 hashMap 타입으로 변경

	※ BeanUtils.describe 메소드를 사용하여서 VO 를 Hashmap 으로 변경할 수 있음



		//vo를 맵으로 변경

		for(int i=0;i<gongmunList.size();i++) {

			list.add((HashMap<String, String>) BeanUtils.describe(gongmunList.get(i)));

			System.out.println(list.get(i));

		}



		

		vo = userName

		getUserName(

		map.get("userName")

6.엑셀 다운로드 메소드를 호출함

	//파일 작성 후 파일 경로와 파일명을 리턴하여 해당 경로에서 파일을 다운받을 수 있도록 함

	/*	

	 * @Param

	 * List<HashMap<String, String>> mapList : 엑셀에 찍을 데이터

	 * keyArray[] : 맵에서 꺼낼 키값

	 * listTitle[] : 엑셀에 표시할 분류 이름

	 * Path : 저장 경로 

	 * subPath : 저장경로의 하위 폴더 경로 

	 * title : 엑셀파일 상단의 제목, 파일명

	 * 

	 * @Return

	 * String path[]

	 * 0 : 전체경로

	 * 1 : 서브경로

	 * */



7. 리턴받은 배열의 2번쟤 [1] 를 ajax에서 윈도우로케이션으로 호출.



	public String[] excelDownload(List<HashMap<String, String>> mapList , String[] keyArray,String listTitle[], String Path , String subPath , String title) throws Exception



	



# ajax 

	호출URL만 변경, 

	function fn_excelDown(){



		$.actionInvoke(

			"POST"

			, true

			, get_invoke()+"/HrmsGongmunseo/excelDownload.json"

			, {"flag" : 1}

			, function(resultData){



				 window.location =resultData[1];

			}

		);

			 

	}





# 컨트롤러



	/**

	 * @see 발령공문 다운로드 

	 * @param ReqGongmunseoVO

	 * @return List<ReqGongmunseoVO>

	 * @throws Exception

	 */

	@RequestMapping(method = RequestMethod.POST, value = "/excelDownload.json", produces = MediaType.APPLICATION_JSON_VALUE)

	public @ResponseBody String[] excelDownload (@RequestBody ReqGongmunseoVO reqGongmunseoVO , HttpServletRequest request, HttpServletResponse response) throws Exception{



		HttpSession session = request.getSession();

		

		List<HashMap<String, String>> list = new ArrayList<>();

		List<ReqGongmunseoVO> gongmunList= gongmunseoService.getGongmunData(reqGongmunseoVO);

		

		

		

		//vo를 맵으로 변경

		for(int i=0;i<gongmunList.size();i++) {

			list.add((HashMap<String, String>) BeanUtils.describe(gongmunList.get(i)));

			System.out.println(list.get(i));

		}

		

		ExcelDownloadUtil excelUtil = new ExcelDownloadUtil();

		String listTitle[] = {"연변" , "발령사항", "계급" , "성명" , "현소속"};

		String keyArray[] = {"seq" , "hnGwanseoNm","hnJikgeupNm","empNm","beforeGwanseoNm"};

		String subPath="resources\\upload\\excel\\";

		String path=session.getServletContext().getRealPath("/");

		String fileName = "발령공문";



		String filePath[] = excelUtil.excelDownload( list, keyArray, listTitle , session.getServletContext().getRealPath("/") , subPath,fileName);



		

		return filePath;



	}

#################################################################################################################
