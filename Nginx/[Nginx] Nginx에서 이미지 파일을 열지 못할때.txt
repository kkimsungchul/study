# Nginx - Nginx에서 이미지 파일을 열지 못할때

# 증상
	Nginx에 작성한 html파일에서 image파일을 읽지 못하는 오류가 발생함
	같은 경로내에 있는 1.jpg , 2.jpg , 3.jpg는 잘 읽는데 
	새로 추가한 KMJ_0003.jpg 파일들은 못읽어옴
	=====================================================================
	-rwxr-xr-x. 1 nginx nginx  476387  3월 28 00:24 1.jpg
	-rwxr-xr-x. 1 nginx nginx 2279904  3월 28 00:24 2.jpg
	-rwxr-xr-x. 1 nginx nginx 2192395  3월 28 00:24 3.jpg
	-rwxr-xr-x. 1 nginx nginx 7622913  5월 15 00:45 KMJ_0003.jpg
	-rwxr-xr-x. 1 nginx nginx 7658540  5월 15 00:45 KMJ_0009.jpg	
	=====================================================================

# 오류 로그
	vi /var/log/nginx/error.log
	=====================================================================
   3032 2025/05/15 00:51:45 [error] 580357#0: *1 open() "/usr/share/nginx/html/image/KMJ_0003.jpg" failed (13: Permission denied), client: 192.168.55.184, server: _, request: "GET /image/KMJ_0003.j        pg HTTP/1.1", host: "192.168.55.125"
   3033 2025/05/15 00:52:26 [error] 580357#0: *1 open() "/usr/share/nginx/html/image/KMJ_0003.jpg" failed (13: Permission denied), client: 192.168.55.184, server: _, request: "GET /image/KMJ_0003.j        pg HTTP/1.1", host: "192.168.55.125"
	=====================================================================

# 원인
	Rocky linux 의 SELinux 가 활성화 되어있으면 발생함
	=====================================================================
	[root@localhost image]# ls -Z /usr/share/nginx/html/image/KMJ_0003.jpg
	unconfined_u:object_r:user_home_t:s0 /usr/share/nginx/html/image/KMJ_0003.jpg
	=====================================================================

	SELinux context가 다음과 같이 설정되어 있는 것이 문제의 직접적인 원인
	user_home_t는 사용자 홈 디렉토리에 쓰이는 타입으로, 
	Nginx가 이 타입의 파일에는 기본적으로 접근할 수 없음. 
	따라서 (13: Permission denied) 에러가 발생
	=====================================================================
	user_home_t
	=====================================================================

# 조치
	Nginx 가 읽을 수 있도록 변경
	=====================================================================
	sudo chcon -R -t httpd_sys_content_t /usr/share/nginx/html/image
	=====================================================================

# 영구 조치
	재부팅 후에도 적용되도록 설정
	=====================================================================
	sudo semanage fcontext -a -t httpd_sys_content_t "/usr/share/nginx/html/image(/.*)?"
	sudo restorecon -Rv /usr/share/nginx/html/image
	=====================================================================

	혹시나 semanage 명령어가 안되면 아래 설치
	=====================================================================
	sudo dnf install policycoreutils-python-utils
	=====================================================================


# 근본 원인
	1. sungchul 계정으로 SFTP접속
	2. 이미지 또는 html파일을 sungchul 계정의 홈 디렉토리에 복사
	3. root 로 ssh 접속
	4. root 로 sungchul 홈 디렉토리에 있는 파일들을 mv 명령어로 이동

	※ sungchul 사용자 홈 디렉토리에 업로드한 이미지는 자동으로 SELinux context user_home_t 를 가지게됨
	위 내용이 문제의 핵심
	이전에는 매번 CP로 했었는데, 이번에는 옮겨야 할 용량이 6GB이다보니 cp 명령어를 사용하지 않고 mv 명령어를 사용해서 발생했음
	
	mv는 SELinux context를 그대로 가져오고
	cp는 기본적으로 SELinux context를 새로 설정


	cp (기본 사용) : 대상 디렉토리 기준으로 새로 설정됨
	mv : 원래 context 유지됨	
	cp --preserve=context : 원래 context 유지됨
	mv 후 restorecon 또는 chcon : context 수동 재설정

	mv로 꼭 사용하려면 아래처럼 명령어 입력
	=====================================================================
	mv ~/file.jpg /usr/share/nginx/html/image/ restorecon /usr/share/nginx/html/image/file.jpg
	=====================================================================

# GPT 답변 내용
	ChatGPT의 말:
	네, 정확히 보셨습니다. 이번 오류의 근본 원인은 다음과 같습니다:

	🎯 근본 원인: SELinux context 누적 문제
		1. sungchul 사용자의 홈 디렉토리 (/home/sungchul)에 이미지를 업로드함
		2. 그 이미지들은 자동으로 SELinux context user_home_t를 가짐 ← 문제의 핵심
		3. 이후 root로 해당 파일을 /usr/share/nginx/html/image/ 아래로 mv 하거나 cp 함
		4. 기존의 SELinux context (user_home_t)가 그대로 따라옴
		5. Nginx는 user_home_t 타입 파일에는 접근할 수 없으므로 Permission denied 발생

	⚠️ SELinux는 파일의 "맥락(context)"도 옮겨옴
		mv를 하면 일반적으로:
		파일 권한 (chmod)
		소유자 (chown)
	
	✅ 그리고 SELinux context도 그대로 유지됩니다
		그래서 mv한 파일도 여전히 user_home_t인 것이죠.

	✅ 올바른 처리 방법
	1. mv 또는 cp 후 context를 재설정해야 함
	=====================================================================
	sudo restorecon -v /usr/share/nginx/html/image/KMJ_0003.jpg
	=====================================================================
	또는 디렉토리 전체:

	=====================================================================
	sudo restorecon -Rv /usr/share/nginx/html/image
	=====================================================================
	이 명령은 해당 경로의 기본 정책에 맞는 SELinux context로 자동 재설정해줍니다.

	✅ 예방 팁
	상황	권장 방법
	홈 디렉토리에서 가져온 파일이 있을 때	restorecon 또는 chcon 으로 context 재설정
	자주 옮겨야 할 경우	cp --preserve=all 대신 cp만 쓰고 restorecon
	스크립트 사용 시	파일 복사 후 restorecon 포함시키기

	📝 요약
	🔥 문제 원인: 홈 디렉토리에서 온 파일이 SELinux context user_home_t를 유지

	❌ Nginx는 이 context 파일을 읽을 수 없음

	✅ 해결: chcon 또는 restorecon으로 context를 httpd_sys_content_t로 변경
