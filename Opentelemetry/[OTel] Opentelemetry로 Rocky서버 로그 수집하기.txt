# OTel - Opentelemetry로 Rocky서버 로그 수집하기

# 콜렉터 디렉토리 생성
	mkdir /opt/otel_collector

# 콜렉터 다운로드
	- 다운로드 페이지 : https://github.com/open-telemetry/opentelemetry-collector-releases/releases/
	※ 파일로그를 읽을려면 contrib 로 다운받아야 함

	cd /opt/otel_collector
	wget https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.112.0/otelcol-contrib_0.112.0_linux_386.tar.gz

# 압축 해제
	tar -zxvf otelcol-contrib_0.112.0_linux_386.tar.gz

# 콜렉터 설정파일 생성
	- 파일로그 설명 : https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/filelogreceiver
	※ 콜렉터 버전이 올라가면서  exporters에서 logging이 사라짐.
	아래처럼 사용해야함
	exporters:
	  debug:
		verbosity: detailed	

	vi customconfig.yaml
	=====================================================================
	```yaml
	receivers:
	  otlp:
		protocols:
		  grpc:
			endpoint: 127.0.0.1:9999
		  http:
			endpoint: 127.0.0.1:4318
	  filelog:
		include: [ '/var/log/messages' ]
		start_at: beginning
		encoding: utf-8

	exporters:
	  debug :
		verbosity: detailed
	  file:
		path: example.log
		rotation:

	processors:
	  batch:

	service:
	  pipelines:
		logs/dev:
		  receivers: [filelog]
		  exporters: [file]
		  processors: [batch]
		traces:
		  receivers: [otlp]
		  exporters: [file]
		  processors: [batch]
		metrics:
		  receivers: [otlp]
		  exporters: [file]
		  processors: [batch]
	```

	=====================================================================


#  콜렉터 실행파일 생성
	vi start_otel_collector.sh
	=====================================================================
	#!/bin/bash

	nohup ./otelcol-contrib --config customconfig.yaml  > collector.log 2>&1 &
	=====================================================================

# 콜렉터 종료 파일 생성
	vi stop_otel_collector.sh
	=====================================================================
	#!/bin/bash

	PID=$(ps -ef |grep '[o]tel' | awk '{print $2}')
	#echo $PID

	if [ -n "$PID" ]; then
		echo "otel process stop....PID : $PID"
		kill -9 $PID
	else
		echo "not working otel collector!"
	fi
	=====================================================================

# 권한 변경
	chmod 755 start_otel_collector.sh
	chmod 755 stop_otel_collector.sh
# 실행
	./start_otel_collector.sh

# 종료
	./stop_otel_collector.sh

# 프로세스 확인
	ps -ef |grep otelcol

# journald 로그 저장
	※ 기본적으로 저장하지 않고 있음
	- 경로 이동 
		/etc/systemd
	- 파일수정 : 
		vi journald.conf
	
	- 기존
	=====================================================================
	[Journal]
	Storage=auto
	#SystemMaxUse=
	#SystemKeepFree=
	#SystemMaxFileSize=
	#SystemMaxFiles=100

	=====================================================================
	- 변경
	=====================================================================
	[Journal]
	Storage=persistent
	SystemMaxUse=100M
	#SystemKeepFree=
	#SystemMaxFileSize=
	SystemMaxFiles=25M
	=====================================================================
	Storage=persistent: 디스크에 영구적으로 저장하도록 설정
	SystemMaxUse=100M : 최대 사용할 크기
	SystemMaxFiles=25M : 파일별 최대 사용 크기


	- journald 서비스 재시작
	systemctl restart systemd-journald

	- 파일 저장 확인
		cd /var/log/journal
	
	※ 바이너리임 vi로 못봄..
	※ rsyslog를 설치하면 된다고 하는데 이거는 서버마다 다를꺼같아서 위에 설정내용 원복함
		
# 수집할 서버 로그
	참고 URL : https://github.com/kkimsungchul/study/blob/master/linux/%5Blinux%5D%20rocky%EC%97%90%20log%ED%8C%8C%EC%9D%BC%20%EC%9A%A9%EB%8F%84.txt

	- 기본 로그
		/var/log/messages 또는 syslog
			부팅 시스템, 시스템 및 오류의 전반적인 정보를 출력
			※ Rocky에서는 messages 로 통합됨

		/var/log/secure 또는 auth.log
			SSH 로그인 및 인증 메시지 등을 출력

		/var/log/cron
			시스템에서 예약된 작업 관련 로그 (크론탭)

		/var/log/boot.log
			부팅 시스템의 로그

		/var/log/yum.log 또는 dnf.log
			패키지 관리자인 yum을 통해 설치, 업데이트, 삭제된 패키지에 대한 정보

		/var/log/audit/audit.log
			시스템의 보안 관련 이벤트
			SELinux와 같은 보안 이벤트 및 시스템 콜 추적
		/var/log/firewalld
			Firewalld(방화벽 데몬)와 관련된 다양한 이벤트와 설정 변경 이벤트
		
		/var/log/firewalld-droppd.log
			화벽에서 차단(dropped)된 패킷에 대한 로그
		
		/var/log/hawkey.log
			hawkey와 관련된 로그 파일
			dnf 또는 yum 등의 패키지 관리자가 패키지 설치, 업데이트, 삭제와 같은 작업에서 hawkey를 호출할 때 생성
			패키지 관리 오류, 설치 또는 업데이트 내역을 추적
		
		/var/log/spooler
			풀러(spooler) 서비스에 대한 로그로, 프린트 작업과 같은 스풀링이 필요한 작업과 관련된 정보
		
		/var/log/tuned/tuned.log
			tuned 서비스에 의해 작성되는 로그로, tuned는 시스템 성능과 전력 소비를 최적화하기 위해 다양한 프로파일을 관리하는 데몬
			tuned가 적용한 시스템 최적화 프로파일, 에러 로그, 적용된 설정 변경 사항 등을 확인

		/var/log/dmesg
			부팅 시스템의 하드웨어 관련 정보 로그
			※ 기본적으로 메모리에 남아있음 journald 처럼 rsyslog 로 남기도록 설정해야함
		


	- 애플리케이션 & 서비스 로그
		/var/log/httpd/access_log
			Apache 웹서버 엑세스 로그
		/var/log_httpd/error_log
			Apache 웹서버 에러 로그
		/var/log/maillog
			메일 서버의 이벤트와 오류 로그


# 여러개의 파일 읽어오기
	- 하나의 경로에서 .log로 읽어오는거는 아래에서 *.log로 하면됨
		include: [ '/var/log/*.log' ]
	- 다만 확장자가 다르거나, 경로가 다를경우 아래의 방법처럼 사용 가능
	=====================================================================
	  filelog:
		include: 
		  - '/var/log/messages'
		  - '/var/log/secure'
		  - '/var/log/fail2ban.log'
	=====================================================================

	- 적용을 한 config 파일
	vi customconfig.yaml
	=====================================================================
	```yaml
	receivers:
	  otlp:
		protocols:
		  grpc:
			endpoint: 127.0.0.1:9999
		  http:
			endpoint: 127.0.0.1:4318
	  filelog:
		include:
		  - '/var/log/messages'
		  - '/var/log/secure'
		  - '/var/log/cron'
		  - '/var/log/fail2ban.log'
		  - '/var/log/audit/audit.log'
		  - '/var/log/dnf.log'
		  - '/var/log/firewalld'
		  - '/var/log/firewalld-droppd.log'
		  - '/var/log/tuned/tuned.log'

		start_at: beginning
		encoding: utf-8

	exporters:
	  debug :
		verbosity: detailed
	  file:
		path: example.log
		rotation:

	processors:
	  batch:

	service:
	  pipelines:
		logs/dev:
		  receivers: [filelog]
		  exporters: [file]
		  processors: [batch]
		traces:
		  receivers: [otlp]
		  exporters: [file]
		  processors: [batch]
		metrics:
		  receivers: [otlp]
		  exporters: [file]
		  processors: [batch]

	```

	=====================================================================


