# 참고 URL 
	https://blog.hjf.pe.kr/57
	https://backlog.com/git-tutorial/kr/intro/intro4_1.html
	https://medium.com/@psychet_learn/git-%EC%82%AC%EC%9A%A9%EB%B2%95-3%EC%9E%A5-github-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0-f53e765844e3

	* 첫 프로젝트 시작후 push, pull 이 안될경우
		https://jobc.tistory.com/177
		https://secuinfo.tistory.com/entry/tip-github

	* 인텔리J 연동
		https://secuinfo.tistory.com/entry/Intellij-Github-Link
		

#1 github 에서 사용할 계정들 


	


#2 msysgit 설치
	https://gitforwindows.org/
	다운로드 완료 후 설치
	( 모든 항목은 디폴트로 진행)
	* 설치 후 git 기본 설정을 해야 하므로 "Git Bash 설정.txt" 파일을 참조하여 셋팅 진행
	


#3 TortoiseGit 설치
	https://tortoisegit.org/download/
	다운로드 완료 후 설치
	( 모든 항목은 디폴트로 진행 )

#4 TortoiseGit 언어팩 설치
	https://tortoisegit.org/download/
	링크 하단에서 korean 선택 후 다운로드


#5 로컬 저장소 생성
	1. 저장소 디렉토리를 생성 한 후에 해당 디렉토리로 이동
		ex )  C:\Users\USER\Documents\Git

	2. 해당 디렉토리 내에서 우클릭 후 "Git 저장소 여기 만들기" 선택


#6 Github 저장소 생성
	
	1. https://github.com/ 에 접속

	2. 생성한 계정으로 로그인

	3. 우측 상단의 " + " 아이콘 클릭 후 "New repository" 선택

	4. Repository name 에는 저장소 이름 기재
	   public private 저장소 공개 여부 설정
		* 3인이하면 private 저장소로 생성 가능
	   Initialize this repository with a README 체크
		* README 를 만들면 저장소에 대한 상세 설명을 쓸수 있음

	5. 생성한 Github 저장소로 이동

	6. 중단에 보면 "Branch:Master" 로 되어있는 버튼을 클릭

	7. 생성할 브런치 명을 입력 
		ex) testBranch
	
	8. 입력후 바로 하단에 나오는 "Create branch : xxxxxx...." 클릭



#7 History, log 등에 표시될 이름과 메일주소 설정
	
	1. #5번 항목에서 생성한 로컬 저장소 디렉토리로 이동
		ex) C:\Users\USER\Documents\Git
	
	2. 우클릭 후 "TortoiseGit" 메뉴에서 "설정" 클릭

	3. "TortoiseGit 설정" 창이 뜨면 좌측 메뉴에서 "Git" 선택

	4. 우측 하단에 있는 "TGit.gitconfig 편집하기(O)" 클릭
	
	5. 메모장 파일이 하나 열리면 "name" 과 "email"을 수정 후 저장

	6. 설정 창을 닫았다가 다시띄우면 변경 완료


		
#8 Github 연결 (원격저장소에 저장)

	1. #5번 항목에서 생성한 로컬 저장소 디렉토리로 이동
		ex) C:\Users\USER\Documents\Git
		
	2. 우클릭 후 "TortoiseGit" 메뉴에서 "설정" 클릭

	3. "TortoiseGit 설정" 창이 뜨면 좌측 메뉴에서 "깃" -> "원격" 선택

	4. 우측의 빈칸을 입력
		원격 : CIIM_Git
		URL : https://github.com/kkimsungchul/study
		URL 입력 : https://github.com/kkimsungchul/study

	5. 빈칸 입력 후 중간쯤의 "추가하고 저장(A)" 클릭 


#9 TortoiseGit 에서 Github로 커밋
	* 메모장 파일을 하나 생성하여서 테스트 

	1. #5번 항목에서 생성한 로컬 저장소 디렉토리로 이동
		ex) C:\Users\USER\Documents\Git

	2. 우클릭 후 "Git 커밋(c) -> master" 클릭

	3. 커밋창이 뜨면 "메시지" 입력 후 하단에서 테스트를위해 생성한 파일 선택
	 * 메시지의 경우 양식에 맞게 설정
	 ex)
	 수정자 :  김성철
	 수정내용 : 로그인 오류 조치


	4. 하단의 "커밋" 클릭

	5. 깃 명령 경과 창이 나오면 우측 하단에 있는 "Push"클릭

	6. Remote 탭에서 7번 항목에서 생성한 "CIIM_Git" 선택 후 확인 클릭

	* 오류 발생시에 조치 사항
		1. "Git Bash here" 을 사용하여 해당 프로젝트로 이동  
				
		2. 하단의 명령어 입력 	
			$ git pull origin master --allow-unrelated-histories
		3. 입력후 해당 폴더에서 "우클릭 후 "Git 동기화" 클릭
	
		4. "깃 동기화" 창에서 좌측 하단의 "가져와 병합하기" 클릭

		

# 10 Github 에서 가져오기 (clone) 
	
	보통 깃 허브에서 가져올때는 아래와 같이 가져오는데 비공개 프로젝트의 경우 조금 다름
		git clone https://github.com/저장소를판유저이름/저장소이름 

	ex) CIIM 매니저 프로젝트 - 작동은 안함 예시임
		git clone https://github.com/securusgit1/securus_ciim


	비공개 프로젝트를 가져 올때
		git clone https://사용자의NAME:비밀번호@github.com/저장소를판유저이름/저장소이름 

	ex) CIIM 매니저 프로젝트 - 작동함
		git clone https://securusgit1:tlzbfjtm1@github.com/securusgit1/securus_ciim

